<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!--
		=========================================
		Spiring配置核心点（数据源、与MyBatis整合、事物控制）
		=========================================
	-->

	<context:component-scan base-package="com.caoxie">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>

	<!-- Spring配置文件，主要和业务逻辑相关 -->
	<!-- ============== 数据源，事物控制... ============== -->
	<!-- 引入外置配置文件 -->
	<context:property-placeholder location="classpath:dbconfig.properties"/>
	<bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value=""></property>
	</bean>

	<!-- ============== 配置和MyBatis整合 ============== -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定MyBatis全局配置文件位置 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="dataSource" ref="pooledDataSource"></property>
		<!-- 指定mybatis，mapper文件位置 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>
	
	<!-- 配置扫描器，将MyBatis接口实现加入ioc容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描所有dao接口的实现，加入到ioc容器中 -->
		<property name="basePackage" value="com.caoxie.crud.dao"></property>
	</bean>
	<!-- ============== 配置和MyBatis整合 ============== -->
	
	<!-- 事物控制 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 控制住数据源 -->
		<property name="dataSource" ref="pooledDataSource"></property>
	</bean>
	
	<!-- 开启基于注解的事物、使用xml配置形式的事物（比较重要的使用配置式） -->
	<aop:config>
		<!-- 切入点表达式 -->
		<!-- ".." 两个点代表包涵子包, "(..)" 参数不限 -->
		<aop:pointcut expression="execution(* com.caoxie.crud.service..*(..))" id="txPoint"/>
		<!-- advice-ref切入规则，pointcut-ref切入点 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>	
	</aop:config>
	
	<!-- 配置事务增强，事务如何切入 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- "*" 所有方法都是事物方法 -->
			<tx:method name="*"/>
			<!-- 以get开头的所有方法，read-only="true"只读，可以提高一定的性能 -->
			<tx:method name="get*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
</beans>

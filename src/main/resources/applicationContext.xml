<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- Spring 配置文件核心点，(数据源、与 MayBits 整合，事务控制) -->

    <!-- 扫描数据源 -->
    <context:component-scan base-package="com.caoxie">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- Spring 配置文件，主要和业务逻辑相关 -->
    <!-- 数据源、事务控制... -->
    <context:property-placeholder location="classpath:dbconfig.properties" />
    <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
        <property name="driverClass" value="${jdbc.driverClass}"></property>
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!-- ========= MyBatis 整合 ========= -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 指定 Mybatis 全局配置文件的位置 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <property name="dataSource" ref="pooledDataSource"></property>
        <!-- 指定 Mybatis, mapper 文件位置 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
    </bean>

    <!-- 配置扫描器，将 MayBatis 接口的实现加入到 ioc 容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描所有 dao 接口实现，加入到 ioc 容器中 -->
        <property name="basePackage" value="com.caoxie.crud.dao"></property>
    </bean>
    <!-- ========= MyBatis 整合 ========= -->

    <!-- 事务控制 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 控制住数据源 -->
        <property name="dataSource" ref="pooledDataSource"></property>
    </bean>

    <!-- 开启基于注解的事物，使用 xml 配置形式事物(比较重要的都是使用配置形式) -->
    <aop:config>
        <!-- 切入点表达式 -->
        <!-- (* com.caoxie.crud.service..*(..)) 两个点代表包含子包，参数任意 -->
        <aop:pointcut id="txPoint" expression="execution(* com.caoxie.crud.service..*(..))"/>
        <!-- 配置增强事物 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint" />
    </aop:config>

    <!-- 配置事物增强，事物如何切入 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- * 代表所有方法都是事物方法 -->
            <tx:method name="*"/>
            <!-- 以 get 开始的所有方法, read-only(性能优化) -->
            <tx:method name="get*" read-only="true" />
        </tx:attributes>
    </tx:advice>

</beans>